class Message{constructor(s,e){this.messages={required:"This field must be filled in",email:"Email format incorrect",number:"This field only accepts numbers",alphabet:"This field only accepts letters",max:`This field maximal ${e} characters.`,min:`This field minimum ${s} characters.`}}setMessage=s=>{Object.keys(s).map((e=>{this.messages[e]=s[e]}))}}class Validate{constructor(s){this.customMessage=s||{},this.name_domain=["gmail.com","yahoo.com"],this.errors={}}isFill=s=>/\S+/.test(s);isAlphabet=s=>/^[a-zA-z\s]+$/.test(s);isEmail=s=>-1!=this.name_domain.indexOf(s.split("@")[1]);isNumber=s=>/^[0-9]*$/.test(s);maxData(s,e){return s.length<e}minData(s,e){return s.length>e}displayMessage=(s,e)=>{document.querySelector(`[data-message=${s.name}]`).innerText=e};check=()=>0===Object.values(this.errors).filter((s=>void 0!==s)).length;validation=(s,e)=>{this.val=s.value,this.result={},this.validations={required:this.isFill(this.val),email:this.isEmail(this.val),number:this.isNumber(this.val),alphabet:this.isAlphabet(this.val)},e.forEach((s=>{s.includes("min")?(this.min=s.split(":")[1],this.result.min=this.minData(this.val,this.min)):s.includes("max")&&(this.max=s.split(":")[1],this.result.max=this.maxData(this.val,this.max)),this.result[s]=this.validations[s]})),this.error=Object.keys(this.result).find((s=>0==this.result[s]));const i=new Message(this.min,this.max);return i.setMessage(this.customMessage),this.errors[s.name]=this.error,this.message=void 0!==this.error?i.messages[this.error]:"",this.displayMessage(s,this.message),console.log(this.errors),console.log(this.message),this.val}}
